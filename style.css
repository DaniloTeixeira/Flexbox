* {
  padding: 0;
  margin: 0;
  /* box-sinzing: border-box -> define o tamanho do elemento, considerando seu margin e padding */
  box-sizing: border-box;
}

body {
  background-color: black;
}

header {
  background-image: linear-gradient(to top, rgb(0, 0, 0), rgb(0, 70, 128));
  box-shadow: inset 0 0 2em black, 0 0 2em black;
  margin-bottom: 30px;
}

header h1 {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 3rem;
  color: #f1f1f1;
  text-align: center;
  width: 100%;
  padding: 50px;
}

.container-galeria {
  margin: 50px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  /* gap -> propriedade do Grid para aplicar espaçamento entre os items de um bloco */
  gap: 2vw;
}

.container-item {
  width: 350px;
  height: 250px;
  border: 10px solid #f1f1f1;
  box-shadow: 5px 5px 5px black;
  /* flex-grow -> define a habilidade de um item flex crescer em relação aos outros dentro do mesmo container */
  flex-grow: 1;
  transition: transform 0.3s ease-in-out;
  /* filter:grayscale -> deixa a imagem em preto e branco */
  filter: opacity(50%);
}

.container-item img {
  width: 100%;
  height: 100%;
  /* object-fit: cover -> ajusta a imagem, para que preencha todo o container, sem distorcer */
  object-fit: cover;
}

.container-item:hover {
  /* transform -> aumenta o item de tamanho */
  transform: scale(1.03);
  border: 10px solid white;
  box-shadow: 5px 5px 5px rgba(255,255,255,0.5);
  filter: none;
  transition: transform 0.3s ease-in-out;
}

footer {
  font-weight: bold;
  font-size: 1.5rem;
  text-align: center;
  font-style: italic;
  margin: 50px;
  color: #f1f1f1
}

/* 'rem', é a medida do elemento, em relação ao tamanho dado a seu elemento raiz, quase sempre é o <html> */
/* 'vw' e 'vh', são medidas baseadas no tamanho da viewport, ou seja, tamanho da tela que estão sendo exibidas, 
    equivalem a 1/100 da altura da viewport */
